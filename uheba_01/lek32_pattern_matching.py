# - несмотря на возможность - не стоит давать своим объектам имена math и case
# _ - универсальный символ (wildcard), может быть добавлен в конце для отработки всех остальных вариантов
# - [a, b], (a, b), a, b равнозначны, ожидается последовательность (кроме строки и байтов), но не для set или dict
# - допустим вызов только типов (float(), str(), MyClass(), и д.т.), обращения по индексу недопустимы
# - после паттерна может быть добавлен guard начинающийся с if, он сработает только при удачном сравнении
# - последовательности (secuence) проверяются строго по содержимому и размеру, маппинги (dict) проверяют только конкретные вхождения
# - имена привязываются (bind) локально, они доступны вне контекста math, для использования внешних констант нужно использовать точку, применяются правила распаковки
# - для OR случаев должны быть привязаны одинаковые имена
# - AS позволит привязать имя даже внутри паттерна
# - проверять типы можно даже внутри паттерна и при привязке имени

# НЕЛЬЗЯ:
# 1) писать **_ для маппингов (dict)
# 2) вызвать свои функции или обращаться к какой то коллекции по индексу (a_list[x]) в блоке case
# 3) привязывать разные имена при использовании OR (|)


import math

PI = 3.14


def some(x):
    match x:
        case z if z == PI:
            # case math.pi:
            print(f" {x}")
        case _:
            raise ValueError(x)


if __name__ == "__main__":
    some(3.14)
